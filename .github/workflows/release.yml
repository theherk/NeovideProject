name: Build and Release

on:
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'

permissions:
  contents: write

jobs:
  build:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2

      - name: Build Intel App
        run: |
          echo "Building Intel version..."
          ARCH="x86_64" ./build.sh
          echo "Checking Intel build contents..."
          ls -R build/
          echo "Copying Intel build..."
          cp -R build/NeovideProject.app build/NeovideProject-intel.app || exit 1
          cp build/NeovideProject.dmg build/NeovideProject-intel.dmg || exit 1
          rm -rf build/NeovideProject.app build/NeovideProject.dmg

      - name: Build ARM App
        run: |
          echo "Building ARM version..."
          ARCH="arm64" ./build.sh
          echo "Checking ARM build contents..."
          ls -R build/
          echo "Copying ARM build..."
          cp -R build/NeovideProject.app build/NeovideProject-arm.app || exit 1
          cp build/NeovideProject.dmg build/NeovideProject-arm.dmg || exit 1
          rm -rf build/NeovideProject.app build/NeovideProject.dmg

      - name: Create Universal App
        run: |
          # First verify the source files exist
          echo "Checking Intel build..."
          ls -la build/NeovideProject-intel.app/Contents/MacOS/neovide-project-launcher || exit 1
          echo "Checking ARM build..."
          ls -la build/NeovideProject-arm.app/Contents/MacOS/neovide-project-launcher || exit 1

          # Create full directory structure
          mkdir -p build/NeovideProject.app/Contents/{MacOS,Resources}

          # Create universal binary
          lipo -create \
            build/NeovideProject-intel.app/Contents/MacOS/neovide-project-launcher \
            build/NeovideProject-arm.app/Contents/MacOS/neovide-project-launcher \
            -output build/NeovideProject.app/Contents/MacOS/neovide-project-launcher

          # Copy all required files
          cp build/NeovideProject-intel.app/Contents/Info.plist build/NeovideProject.app/Contents/
          cp -r build/NeovideProject-intel.app/Contents/Resources/* build/NeovideProject.app/Contents/Resources/

          # Make sure the launcher is executable
          chmod +x build/NeovideProject.app/Contents/MacOS/neovide-project-launcher

          # Create universal DMG
          hdiutil create -volname "NeovideProject" -srcfolder "build/NeovideProject.app" -ov -format UDZO "build/NeovideProject-universal.dmg"

      - name: Verify Build Artifacts
        run: |
          ls -la build/
          file build/NeovideProject-intel.app/Contents/MacOS/neovide-project-launcher
          file build/NeovideProject-arm.app/Contents/MacOS/neovide-project-launcher
          file build/NeovideProject.app/Contents/MacOS/neovide-project-launcher
          test -f "build/NeovideProject-intel.dmg"
          test -f "build/NeovideProject-arm.dmg"
          test -f "build/NeovideProject-universal.dmg"

      - name: Create Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            build/NeovideProject-intel.dmg
            build/NeovideProject-arm.dmg
            build/NeovideProject-universal.dmg
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

